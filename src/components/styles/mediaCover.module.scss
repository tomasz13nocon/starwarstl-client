@use "@/vars.scss" as *;

.cover-button {
  margin: 6px 14px 6px 6px;
  height: fit-content;
  position: relative;
  box-shadow: 2px 2px 8px #000;
  & > div {
    // Overwrite blurhash lib to remove whitespace
    display: block !important;
  }
  @media (max-width: $width-md) {
    margin: 6px auto 14px;
  }
}

.cover {
  position: absolute;
  top: 0;
  left: 0;
}

.cover-full {
  border: 4px ridge white;
  background-repeat: no-repeat;
  background-size: cover;
  display: block;
  box-sizing: border-box;
}

.blur {
  position: absolute !important;
  z-index: -1;
}

$anim-duration: 200ms;
$anim-ease: cubic-bezier(0.09, 0.31, 0.28, 0.99);
.overlay {
  position: fixed;
  inset: 0;
  backdrop-filter: blur(6px);
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 99;
  animation: overlayShow $anim-duration $anim-ease;
  &[data-state="closed"] {
    animation: overlayHide $anim-duration $anim-ease;
  }
}

.content {
  z-index: 100;
  background-color: white;
  border-radius: 6px;
  box-shadow:
    hsl(206 22% 7%) 0px 10px 38px -10px,
    hsl(206 22% 7%) 0px 10px 20px -15px;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  animation: contentShow $anim-duration $anim-ease;
  &[data-state="closed"] {
    animation: contentHide $anim-duration $anim-ease;
  }
}

@keyframes overlayShow {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes contentShow {
  from {
    opacity: 0;
    transform: translate(-50%, -30%) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

@keyframes overlayHide {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes contentHide {
  from {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  to {
    opacity: 0;
    transform: translate(-50%, -30%) scale(0.95);
  }
}
