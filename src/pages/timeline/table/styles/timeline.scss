@use "@/vars.scss" as *;

.message-container {
  text-align: center;
  margin-top: 20px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  img {
    width: 200px;
    max-width: 100%;
    border: 1px solid darkgrey;
  }
  .small {
    font-size: 0.7em;
  }
}

.timeline-container {
  display: flex;
  gap: 10px;
  margin: 0 12px;
  @media (max-width: $width-md) {
    margin: 0 6px;
  }
  @media (max-width: $width-lg) {
    .filters-container {
      height: 100%;
    }
  }
}

$full-image-transition: 0.2s;
.full-image-parent-enter {
  opacity: 0;
  .cover,
  .blur {
    transform: translateY(10vh);
  }
}
.full-image-parent-enter-active {
  transition: opacity $full-image-transition;
  opacity: 1;
  .cover,
  .blur {
    transition: transform $full-image-transition;
    transform: translateY(0px);
  }
}
.full-image-parent-exit {
  opacity: 1;
  .cover,
  .blur {
    transform: translateY(0px);
  }
}
.full-image-parent-exit-active {
  transition: opacity $full-image-transition;
  opacity: 0;
  .cover,
  .blur {
    transition: transform $full-image-transition;
    transform: translateY(10vh);
  }
}

.full-image-container {
  backdrop-filter: blur(6px);
  background-color: rgba(0, 0, 0, 0.5);

  position: fixed;
  top: 0;
  left: 0;
  z-index: 10;
  margin: 0 auto;
  cursor: pointer;

  $padding: 10px;
  height: 100%;
  width: 100%;
  .full-image-helper {
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: relative;
  }
  .cover,
  .blur {
    max-width: 95%;
    max-height: 95%;
  }
  .cover {
    border: 4px ridge white;
    background-repeat: no-repeat;
    background-size: cover;
  }
  .blur {
    position: absolute !important;
    z-index: -1;
  }
}

.table {
  border-collapse: collapse;
  flex-grow: 1;
  @media (max-width: $width-lg) {
    margin-left: 0;
  }
}

.td,
.th {
  $padding: 2px;
  padding: $padding $padding + 5px;

  border: 1px solid #111;
  margin: -1px 0 0 -1px;

  &.not-sortable {
    pointer-events: none;
  }

  flex-shrink: 0;
  &.date {
    width: 80px;
  }
  &.cover {
    width: 55px;
    padding: 0;
  }
  &.title {
    flex-grow: 1;
    flex-shrink: 1;
  }
  &.writer {
    width: 140px;
  }
  &.releaseDate {
    width: 84px;
  }
}

.tr-outer:last-child .td.continuity {
  border-bottom: 1px solid black;
}
.td.cover:not(.no-cover) {
  background-color: black;
}

.thead {
  position: sticky;
  top: 0;
  z-index: 5;
  display: flex;
  text-align: center;
  @media (max-width: $width-md) {
    display: none;
  }
}
.th {
  background-color: #444;
  color: white;
  cursor: pointer;
  &:hover {
    box-shadow: 0 0 2px black;
    z-index: 4;
  }
  user-select: none;
  .th-inner {
    position: relative;
    top: 50%;
    transform: translateY(-50%);
  }
  .icon {
    padding-left: 4px;
    vertical-align: sub;
    color: $accent;
  }
}

.standard-row-inner {
  display: flex;
  @media (max-width: $width-md) {
    flex-wrap: wrap;
    &.compact {
      flex-wrap: nowrap;
      .td.cover {
        order: -3;
      }
    }
  }
  .td {
    .td-inner {
      position: relative;
      top: 50%;
      transform: translateY(-50%);
    }
    font-size: 0.8em;
    ul {
      list-style: "ãƒ»";
      padding-left: 13px;
      margin: 0;
    }
    @media (max-width: $width-md) {
      min-width: auto;
      width: auto;
      min-height: 18px;
      word-break: break-word;
    }
  }
  .td.releaseDate {
    @media (max-width: $width-md) {
      flex-basis: 84px;
      flex-grow: 1;
    }
  }
  .td.date {
    @media (max-width: $width-md) {
      // Huge numbers because we want releaseDate to grow, but only when it's the only item in the row.
      flex-grow: 200;
      flex-basis: 0;
    }
  }
  .td.writer {
    @media (max-width: $width-md) {
      flex-grow: 400;
      flex-basis: 0;
    }
    @media (max-width: $width-sm) {
      flex-grow: 300;
    }
  }
  .td.cover {
    @media (max-width: $width-md) {
      flex-grow: 0;
      order: -1;
      &.no-cover {
        display: none;
      }
    }
  }
  .td.title {
    font-weight: $weight-bolder;
    font-size: 1em;
    cursor: pointer;
    &:hover {
      box-shadow: 0 0 2px black;
      z-index: 4;
    }
    button {
      @extend %reset-button;
      pointer-events: none;
      text-align: left;
    }
    .tv-image {
      margin-right: 8px;
      position: relative;
      top: 2px;
      border-radius: 2px;
      float: left;
      &[title="Obi-Wan Kenobi (television series)"] {
        // Remedy for poor visibility
        background: #0f0f0f;
      }
    }
    .season-episode {
      margin-right: 8px;
      position: relative;
      top: -2px;
      border: 1px solid black;
      border-radius: 4px;
      padding: 0 4px;
      background-color: $tv-tertiary;
      color: white;
      font-size: 0.75em;
      white-space: nowrap;
      overflow: hidden;
    }
    .icon.audiobook-icon {
      font-size: 1.2em;
      vertical-align: bottom;
      margin: 0 4px;
    }
    @media (max-width: $width-md) {
      width: 100%;
      order: -2;
    }
  }

  .td.cover {
    img {
      max-width: 100%;
      display: block;
    }
  }
}

.wookiee-link {
  user-select: none;
  img {
    margin-left: 0.3em;
    width: 1em;
    position: relative;
    top: 0.15em;
    transition: transform 0.1s;
  }
  &:hover img {
    transform: scale(1.5);
  }
}

.loading-indicator-table {
  height: 100px;
  background: linear-gradient(#f3f3f300, #f3f3f3ff);
  transform: translateY(-100%);
  & + .message-container {
    transform: translateY(-100px);
  }
}
